#pragma warning Disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace School_Management_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="school")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::School_Management_System.Properties.Settings.Default.schoolConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.role_delete")]
		public int role_delete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> role_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), role_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.role_getRoles")]
		public ISingleResult<role_getRolesResult> role_getRoles()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<role_getRolesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.role_insert")]
		public int role_insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.role_update")]
		public int role_update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> role_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), role_id, name, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.staff_deleteStaff")]
		public int staff_deleteStaff([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> staffID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), staffID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.staff_getStaff")]
		public ISingleResult<staff_getStaffResult> staff_getStaff()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<staff_getStaffResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.staff_insert")]
		public int staff_insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(25)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(25)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> role, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary staff_image)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, username, password, phone, role, status, staff_image);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.staff_update")]
		public int staff_update([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(25)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(25)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> role, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary image, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> staffId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, username, password, phone, role, status, image, staffId);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _staff_id;
		
		private string _staff_name;
		
		private string _staff_username;
		
		private string _staff_password;
		
		private string _staff_phone;
		
		private int _staff_role;
		
		private byte _staff_status;
		
		private System.Data.Linq.Binary _staff_image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstaff_idChanging(int value);
    partial void Onstaff_idChanged();
    partial void Onstaff_nameChanging(string value);
    partial void Onstaff_nameChanged();
    partial void Onstaff_usernameChanging(string value);
    partial void Onstaff_usernameChanged();
    partial void Onstaff_passwordChanging(string value);
    partial void Onstaff_passwordChanged();
    partial void Onstaff_phoneChanging(string value);
    partial void Onstaff_phoneChanged();
    partial void Onstaff_roleChanging(int value);
    partial void Onstaff_roleChanged();
    partial void Onstaff_statusChanging(byte value);
    partial void Onstaff_statusChanged();
    partial void Onstaff_imageChanging(System.Data.Linq.Binary value);
    partial void Onstaff_imageChanged();
    #endregion
		
		public Staff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int staff_id
		{
			get
			{
				return this._staff_id;
			}
			set
			{
				if ((this._staff_id != value))
				{
					this.Onstaff_idChanging(value);
					this.SendPropertyChanging();
					this._staff_id = value;
					this.SendPropertyChanged("staff_id");
					this.Onstaff_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string staff_name
		{
			get
			{
				return this._staff_name;
			}
			set
			{
				if ((this._staff_name != value))
				{
					this.Onstaff_nameChanging(value);
					this.SendPropertyChanging();
					this._staff_name = value;
					this.SendPropertyChanged("staff_name");
					this.Onstaff_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_username", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string staff_username
		{
			get
			{
				return this._staff_username;
			}
			set
			{
				if ((this._staff_username != value))
				{
					this.Onstaff_usernameChanging(value);
					this.SendPropertyChanging();
					this._staff_username = value;
					this.SendPropertyChanged("staff_username");
					this.Onstaff_usernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_password", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string staff_password
		{
			get
			{
				return this._staff_password;
			}
			set
			{
				if ((this._staff_password != value))
				{
					this.Onstaff_passwordChanging(value);
					this.SendPropertyChanging();
					this._staff_password = value;
					this.SendPropertyChanged("staff_password");
					this.Onstaff_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_phone", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string staff_phone
		{
			get
			{
				return this._staff_phone;
			}
			set
			{
				if ((this._staff_phone != value))
				{
					this.Onstaff_phoneChanging(value);
					this.SendPropertyChanging();
					this._staff_phone = value;
					this.SendPropertyChanged("staff_phone");
					this.Onstaff_phoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_role", DbType="Int NOT NULL")]
		public int staff_role
		{
			get
			{
				return this._staff_role;
			}
			set
			{
				if ((this._staff_role != value))
				{
					this.Onstaff_roleChanging(value);
					this.SendPropertyChanging();
					this._staff_role = value;
					this.SendPropertyChanged("staff_role");
					this.Onstaff_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_status", DbType="TinyInt NOT NULL")]
		public byte staff_status
		{
			get
			{
				return this._staff_status;
			}
			set
			{
				if ((this._staff_status != value))
				{
					this.Onstaff_statusChanging(value);
					this.SendPropertyChanging();
					this._staff_status = value;
					this.SendPropertyChanged("staff_status");
					this.Onstaff_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staff_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary staff_image
		{
			get
			{
				return this._staff_image;
			}
			set
			{
				if ((this._staff_image != value))
				{
					this.Onstaff_imageChanging(value);
					this.SendPropertyChanging();
					this._staff_image = value;
					this.SendPropertyChanged("staff_image");
					this.Onstaff_imageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _role_id;
		
		private string _role_name;
		
		private byte _role_status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onrole_nameChanging(string value);
    partial void Onrole_nameChanged();
    partial void Onrole_statusChanging(byte value);
    partial void Onrole_statusChanged();
    #endregion
		
		public Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string role_name
		{
			get
			{
				return this._role_name;
			}
			set
			{
				if ((this._role_name != value))
				{
					this.Onrole_nameChanging(value);
					this.SendPropertyChanging();
					this._role_name = value;
					this.SendPropertyChanged("role_name");
					this.Onrole_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_status", DbType="TinyInt NOT NULL")]
		public byte role_status
		{
			get
			{
				return this._role_status;
			}
			set
			{
				if ((this._role_status != value))
				{
					this.Onrole_statusChanging(value);
					this.SendPropertyChanging();
					this._role_status = value;
					this.SendPropertyChanged("role_status");
					this.Onrole_statusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class role_getRolesResult
	{
		
		private int _ID;
		
		private string _Role;
		
		private string _Status;
		
		public role_getRolesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class staff_getStaffResult
	{
		
		private int _ID;
		
		private string _Name;
		
		public staff_getStaffResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
